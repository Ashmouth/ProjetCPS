Service: HitboxRect
	Types: bool, int 
	Observators: 
		init: int × int × int × int → [HitboxRect] 
	Operators: 
	
	Observations: 
		[invariant]: 
			
			 
		[init]: 
			PositionX(init(x,y,w,h)) = x
			PositionY(init(x,y,w,h)) = y
			Width(init(x,y,w,h)) = w
			Height(init(x,y,w,h)) = h
			
		[MoveTo]: 
			PositionX(MoveTo(H,x,y)) = x 
			PositionY(MoveTo(H,x,y)) = y 
			Height(MoveTo(H,x,y)) = Height(H)
			Width(MoveTo(H,x,y,w,h)) = Width(H)
			
		[resize]:
			Height(resize(H, w, h)) = h
			Width(resize(H, w, h)) = w 
			PositionX(resize(H, w, h)) = PositionX(H)
			PositionY(resize(H, w, h)) = PositionY(H)
			
		[belongsTo]:
			// discutable, est on obligé de le mettre ?
			∀ (x,y) , x >= PositionX(H) ∧ x <= PositionX(H)+Width(H)
				∧ y >= PositionY(H) ∧ y <= PositionY(H)+Height(H)
				⇔ belongsTo(H,x,y)
		
		[equalsTo]:
			// discutable, est on obligé de le mettre ?
			equalsTo(H,H2) ⇔
   			  PositionX(H) = PositionX(H2)
   			∧ PositionY(H) = PositionY(H2)
   			∧ Width(H) = Width(H2)
   			∧ Height(H) = Height(H2)
				
		[collidesWith]:
			// discutable, est on obligé de le mettre ?
			CollidesWith(H,H2) ⇔
   			  PositionX(H) < PositionX(H2) + Width(H2)
   			∧ PositionY(H) < PositionY(H2) + Height(H2)
   			∧ PositionX(H) + Width(H) > PositionX(H2)
   			∧ PositionY(H) + Height(H) > PositionY(H2)
